{"version":3,"file":"static/js/625.77af9d7a.chunk.js","mappings":"6JACA,QAAoC,uCAApC,EAAqF,6BAArF,EAA+H,gCAA/H,EAA6K,iCAA7K,EAA4N,iC,uECA5N,QAAgC,qC,aC8ChC,MA+BA,EA/BuBA,IACnB,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAEzCE,EAAAA,EAAAA,YAAW,KACPD,EAAUL,EAAMI,OAAO,GACxB,CAACJ,EAAMI,SAeV,OACIG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aACFT,GACGU,EAAAA,EAAAA,KAAA,SAAOC,WAAW,EAAMC,OAbXC,KACrBZ,GAAY,GACZF,EAAMe,mBAAmBX,EAAO,EAW4BY,SAR5CC,IAChBZ,EAAUY,EAAEC,OAAOC,MAAM,EAO2DA,MAAOf,KACnFO,EAAAA,EAAAA,KAAA,KAAGS,QAlBQC,KACnBnB,GAAY,EAAK,EAiBoBQ,SAAEN,GAAU,gBAC3C,E,cCzEd,QAA2B,kCAA3B,EAA2E,qCCuB3E,IAAIkB,EAAYtB,IACLO,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAIV,EAAMuB,WAAW,KAAGvB,EAAMwB,eAGzC,QAzByBxB,IAEjBO,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKV,EAAMyB,QAAQC,YAEnBf,EAAAA,EAAAA,KAAA,KAAAD,SAAA,uBAAAiB,OAA2B3B,EAAMyB,QAAQG,eAAiB,MAAQ,QAEjE5B,EAAMyB,QAAQG,iBACfjB,EAAAA,EAAAA,KAAA,KAAAD,SAAA,gBAAAiB,OAAoB3B,EAAMyB,QAAQI,8BAElClB,EAAAA,EAAAA,KAAA,KAAAD,SAAA,aAAAiB,OAAiB3B,EAAMyB,QAAQK,WAE9BC,OAAOC,KAAKhC,EAAMyB,QAAQQ,UAAUC,KAAIC,IAC9BxB,EAAAA,EAAAA,KAACW,EAAQ,CAAYC,WAAYY,EAAMX,YAAaxB,EAAMyB,QAAQQ,SAASE,IAA5DA,KAEzBnC,EAAMoC,UAAWzB,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAQS,QAASpB,EAAME,YAAYQ,SAAC,mB,kCCdvE,MA4CA,GAJiC2B,EAAAA,EAAAA,GAAU,CACvCC,KAAM,mBADuBD,EAxCJrC,IAErBO,EAAAA,EAAAA,MAAA,QAAMgC,SAAUvC,EAAMwC,aAAa9B,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,gBACAC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,KAAM,WAAYC,YAAa,YAAaC,UAAWC,EAAAA,QAGlEtC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,yBACAC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,KAAM,iBAAkBC,YAAa,qBAAsBC,UAAWC,EAAAA,EAAOC,KAAK,iBAG7FvC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,oCACAC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,KAAM,4BAA6BC,YAAa,cAAeC,UAAWC,EAAAA,QAGrFtC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,eACAC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,KAAM,UAAWC,YAAa,WAAYC,UAAWC,EAAAA,OAG/Dd,OAAOC,KAAKhC,EAAMyB,QAAQQ,UAAUC,KAAIC,IAEpC5B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACGC,EAAAA,EAAAA,KAAA,KAAAD,SAAA,GAAAiB,OAAOQ,EAAI,QACXxB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACC,KAAI,YAAAf,OAAcQ,GAAQQ,YAAaR,EAAMS,UAAWC,EAAAA,MAFxDV,KAKbnC,EAAM+C,OACRpC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAC3BV,EAAM+C,QACF,IAETpC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBCezB,EA9CqBV,IAEnB,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEvC,IAAIH,EAAMyB,QACR,OAAOd,EAAAA,EAAAA,KAACqC,EAAAA,EAAS,IAenB,OACMzC,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAsBC,UAClCC,EAAAA,EAAAA,KAAA,OAAKuC,IAAKC,EAAeC,IAAI,QAG/B7C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKuC,IAAMlD,EAAMyB,QAAQ4B,OAAOC,OAASC,EAAaH,IAAI,KACzDpD,EAAMoC,UAAW7B,EAAAA,EAAAA,MAAA,SAAOiD,QAAS,YAAahD,UAAWC,EAAgBC,SAAA,CAAC,iBACzEC,EAAAA,EAAAA,KAAA,SAAO8C,GAAI,YAAaX,KAAM,OAAQ9B,SAtB9BC,IACjBA,EAAEC,OAAOwC,MAAMC,OAAS,GACzB3D,EAAM4D,qBAAqB3C,EAAEC,OAAOwC,MAAM,GAC5C,QAqBU/C,EAAAA,EAAAA,KAACkD,EAAa,CAACzD,OAAQJ,EAAMI,OAAQW,mBAAoBf,EAAMe,yBAGjEJ,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAC3BT,GAAWU,EAAAA,EAAAA,KAACmD,EAAwB,CAACC,cAAe/D,EAAMyB,QAASc,SAtBlEyB,IACdhE,EAAMiE,cAAcD,GAAUE,MAAK,KACjChE,GAAY,EAAM,IACjBiE,OAAM,QAAS,EAmBkF1C,QAASzB,EAAMyB,WAC3Fd,EAAAA,EAAAA,KAACyD,EAAe,CAAClE,YAAaA,KAAOA,GAAY,EAAK,EAAGkC,QAASpC,EAAMoC,QAASX,QAASzB,EAAMyB,iBAGjH,EChDX,GAAgB,UAAY,yBAAyB,aAAe,4BAA4B,SAAW,yBCA3G,EAA+B,mCAA/B,EAAgF,kCAAhF,EAAiI,mC,aCKjI,IAAI4C,GAAcC,EAAAA,EAAAA,GAAU,IAcxBC,GAAgBlC,EAAAA,EAAAA,GAAU,CAC5BC,KAAM,YADYD,EAZJrC,IACdwE,QAAQC,IAAIzE,EAAM0E,QAEhBnE,EAAAA,EAAAA,MAAA,QAAMgC,SAAUvC,EAAMwC,aAAchC,UAAWC,EAAiBC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACG,UAAWC,EAAAA,EAAOH,KAAK,YAAYC,YAAY,eAAegC,SAAU,CAACC,EAAAA,EAAUP,QAE9F1D,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eASZ,MAgBA,EAhBsBV,IAOdO,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,UAC9BC,EAAAA,EAAAA,KAAC4D,EAAa,CAAChC,SARZyB,IACbhE,EAAM6E,QAAQb,EAASc,UAAU,S,sDCFrC,EApBgB9E,IACZwE,QAAQC,IAAI,WAERlE,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAACoE,EAAY,CAACF,QAAS7E,EAAM6E,WAE7BlE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAIuE,WAAWtE,SAC1BV,EAAMiF,aAAa/C,KAAKC,IACrB5B,EAAAA,EAAAA,MAAA,OAAmBC,UAAWC,EAAIyE,UAAUxE,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAI0E,aAAazE,UAC7BC,EAAAA,EAAAA,KAAA,OAAKuC,IAAKkC,EAAShC,IAAI,QAG3BzC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAI4E,SAAS3E,UAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAIyB,EAAKmD,eAL7BnD,EAAKsB,Y,wBCOnC,SAHqB8B,EAAAA,EAAAA,KAZEC,IACd,CACLP,aAAcO,EAAMC,YAAYR,iBAIVS,IACjB,CACLb,QAAUc,IAAgBD,GAAUE,EAAAA,EAAAA,IAAUD,GAAY,KAIzCJ,CAA6CM,GCHlE,EAViB7F,IAETO,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACmF,EAAW,CAAC7B,cAAejE,EAAMiE,cAAeL,qBAAsB5D,EAAM4D,qBAAsBxB,QAASpC,EAAMoC,QACjHX,QAASzB,EAAMyB,QAASrB,OAAQJ,EAAMI,OAAQW,mBAAoBf,EAAMe,sBACzEJ,EAAAA,EAAAA,KAACoF,EAAc,O,kCCwBzB,MAAMC,UAAyBC,EAAAA,UAE7BC,gBAAAA,GACE,IAAIC,EAASC,KAAKpG,MAAMqG,OAAOC,OAAOH,OAClCA,IACFA,EAASC,KAAKpG,MAAMuG,kBAEtBH,KAAKpG,MAAMwG,aAAaL,GACxBC,KAAKpG,MAAMyG,gBAAgBN,EAC7B,CAEAO,iBAAAA,GACEN,KAAKF,kBACP,CAEAS,kBAAAA,CAAmBC,GACdR,KAAKpG,MAAMqG,OAAOC,OAAOH,SAAWS,EAAUP,OAAOC,OAAOH,QAC7DC,KAAKF,kBAET,CAEAW,MAAAA,GACI,OAAOlG,EAAAA,EAAAA,KAACmG,EAAO,CAAC7C,cAAemC,KAAKpG,MAAMiE,cAAeL,qBAAsBwC,KAAKpG,MAAM4D,qBAAsBxB,SAAUgE,KAAKpG,MAAMqG,OAAOC,OAAOH,OAC3I1E,QAAS2E,KAAKpG,MAAMyB,QAASrB,OAAQgG,KAAKpG,MAAMI,OAAQW,mBAAoBqF,KAAKpG,MAAMe,oBACnG,EAUF,SAAegG,EAAAA,EAAAA,KACbxB,EAAAA,EAAAA,KARqBC,IAAK,CACxB/D,QAAS+D,EAAMC,YAAYhE,QAC3BrB,OAAQoF,EAAMC,YAAYrF,OAC1BmG,iBAAkBf,EAAMwB,KAAKb,OAC7Bc,OAAQzB,EAAMwB,KAAKC,UAII,CAAET,aAAY,KAAEC,gBAAe,KAAE1F,mBAAkB,KAAE6C,qBAAoB,KAAEK,cAAc,QA3DpH,SAAoBiD,GAqBlB,OApBA,SAAiClH,GAC7B,IAAImH,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXhB,GAASiB,EAAAA,EAAAA,KASb,OACI5G,EAAAA,EAAAA,KAACuG,EAAS,IACFlH,EACJqG,OAAQ,CAAEc,WAAUE,WAAUf,WAG1C,CAGF,GAuCEkB,EAAAA,EAHF,CAIExB,E","sources":["webpack://reactlesson2024/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","webpack://reactlesson2024/./src/Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?3d5a","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","webpack://reactlesson2024/./src/Components/Profile/ProfileInfo/ProfileMainInfo/ProfileMainInfo.module.css?c380","Components/Profile/ProfileInfo/ProfileMainInfo/ProfileMainInfo.js","Components/Profile/ProfileInfo/ProfileMainInfo/ProfileMainInfoForm.js","Components/Profile/ProfileInfo/ProfileInfo.js","webpack://reactlesson2024/./src/Components/Profile/Posts/Posts.module.css?dbb2","webpack://reactlesson2024/./src/Components/Profile/Posts/NewPostBlock/NewPostBlock.module.css?fb80","Components/Profile/Posts/NewPostBlock/NewPostBlock.js","Components/Profile/Posts/Posts.js","Components/Profile/Posts/PostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileBackground\":\"ProfileInfo_profileBackground__MuOzs\",\"profile\":\"ProfileInfo_profile__qW4dl\",\"profileImg\":\"ProfileInfo_profileImg__Zyxme\",\"customInput\":\"ProfileInfo_customInput__SS4QG\",\"profileData\":\"ProfileInfo_profileData__2lRSU\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusWrapper\":\"ProfileStatus_statusWrapper__jLzZw\"};","import React, { useState, useEffect } from 'react';\r\nimport css from './ProfileStatus.module.css';\r\n\r\n// class ProfileStatus extends React.Component {\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n    \r\n//     activateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: true\r\n//         })\r\n//     }\r\n\r\n//     deactivateEditMode = () => {\r\n//         this.setState({\r\n//             editMode: false\r\n//         })\r\n//         this.props.updateUserStatusTC(this.state.status);\r\n//     }\r\n\r\n//     changeStatus = (e) => {\r\n//         this.setState({\r\n//             status: e.target.value\r\n//         })\r\n//     }\r\n\r\n//     componentDidUpdate(prevProps, prevState){ \r\n//         if(prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className={css.statusWrapper}>\r\n//                 {this.state.editMode ? \r\n//                 <input autoFocus={true} onBlur={this.deactivateEditMode} onChange={this.changeStatus} value={ this.state.status } /> :\r\n//                 <p onClick={this.activateEditMode}>{this.props.status || 'No status'}</p>}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatusTC(status);\r\n    }\r\n\r\n    let changeStatus = (e) => {\r\n        setStatus(e.target.value);\r\n    } \r\n\r\n    return (\r\n        <div className={css.statusWrapper}>\r\n            <p>Status: </p>\r\n            {editMode ?\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={changeStatus} value={status} /> :\r\n                <p onClick={activateEditMode}>{status || 'No status'}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"mainInfo\":\"ProfileMainInfo_mainInfo__cP9VO\",\"commonError\":\"ProfileMainInfo_commonError__xh+rx\"};","import React from 'react';\r\nimport css from './ProfileMainInfo.module.css';\r\n\r\nconst ProfileMainInfo = (props) => {\r\n    return (\r\n        <div className={css.mainInfo}>\r\n\r\n            <h2>{props.profile.fullName}</h2>\r\n\r\n            <p>{`Looking for a job?: ${props.profile.lookingForAJob ? 'Yes' : 'No'}`}</p>\r\n            \r\n            {props.profile.lookingForAJob && \r\n            <p>{`Description: ${props.profile.lookingForAJobDescription}`}</p>}\r\n            \r\n            <p>{`About me: ${props.profile.aboutMe}`}</p>\r\n\r\n            {Object.keys(props.profile.contacts).map(item => {\r\n                return <Contacts key={item} contactKey={item} contactData={props.profile.contacts[item]} />\r\n            })}\r\n            {props.isOwner && <div><button onClick={props.setEditMode}>Edit data</button></div> }\r\n        </div>\r\n    );\r\n}\r\n\r\nlet Contacts = (props) => {\r\n    return <p>{props.contactKey}: {props.contactData}</p>\r\n  }\r\n\r\nexport default ProfileMainInfo;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../../Common/FormsControl/FormsControl';\r\nimport css from './ProfileMainInfo.module.css';\r\n\r\nconst ProfileMainInfoForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <p>{`Full Name:`}</p>\r\n                <Field name={'fullName'} placeholder={'Full Name'} component={Input} />\r\n            </div>\r\n\r\n            <div>\r\n                <p>{`Looking for a job?:`}</p>\r\n                <Field name={'lookingForAJob'} placeholder={'Looking for a job?'} component={Input} type='checkbox'/>\r\n            </div>\r\n\r\n            <div>\r\n                <p>{`Looking for a job description:`}</p>\r\n                <Field name={'lookingForAJobDescription'} placeholder={'Description'} component={Input} />\r\n            </div>\r\n\r\n            <div>\r\n                <p>{`About me:`}</p>\r\n                <Field name={'aboutMe'} placeholder={'About me'} component={Input} />\r\n            </div>\r\n\r\n            {Object.keys(props.profile.contacts).map(item => {\r\n                 return (\r\n                 <div key={item} >\r\n                    <p>{`${item}:`}</p>\r\n                    <Field name={`contacts.${item}`} placeholder={item} component={Input} />\r\n                </div>);\r\n             })}\r\n             {props.error ? \r\n            <div className={css.commonError}>\r\n                {props.error}\r\n            </div> : ''}\r\n             \r\n            <div><button>Save</button></div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileMainInfoReduxForm = reduxForm({\r\n    form: 'profileMainData' \r\n})(ProfileMainInfoForm);\r\n\r\nexport default ProfileMainInfoReduxForm;","import React, { useState } from 'react';\r\nimport css from './ProfileInfo.module.css';\r\nimport backgroundImg from './../../../Materials/contentImg.jpg';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport profileImg from './../../../Materials/profileImg.png';\r\nimport ProfileMainInfo from './ProfileMainInfo/ProfileMainInfo';\r\nimport ProfileMainInfoReduxForm from './ProfileMainInfo/ProfileMainInfoForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if(!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  let selectNewPhoto = (e) => {\r\n    if(e.target.files.length > 0){ \r\n      props.changeProfilePhotoTC(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  let onSubmit = (formData) => {\r\n    props.setMainDataTC(formData).then(() => {\r\n      setEditMode(false);\r\n    }).catch(() => {});\r\n    }\r\n\r\n  return (\r\n        <>\r\n        <div className={css.profileBackground}>\r\n            <img src={backgroundImg} alt=\"\"/>\r\n          </div>\r\n\r\n          <div className={css.profile}>\r\n            <div className={css.profileImg}>\r\n              <img src={ props.profile.photos.large || profileImg } alt=\"\"/>\r\n              {props.isOwner && <label htmlFor={'fileInput'} className={css.customInput}> New photo...\r\n                <input id={\"fileInput\"} type={'file'} onChange={selectNewPhoto}/>\r\n                </label>}\r\n              <ProfileStatus status={props.status} updateUserStatusTC={props.updateUserStatusTC} />\r\n            </div>\r\n\r\n            <div className={css.profileData}>\r\n                {editMode ? <ProfileMainInfoReduxForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/> \r\n                          : <ProfileMainInfo setEditMode={() => {setEditMode(true)}} isOwner={props.isOwner} profile={props.profile}/>}\r\n              </div>\r\n           </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"Posts_postBlock__Zy8f4\",\"postBlockImg\":\"Posts_postBlockImg__frmd9\",\"postText\":\"Posts_postText__7bYG4\"};","// extracted by mini-css-extract-plugin\nexport default {\"newPostBlock\":\"NewPostBlock_newPostBlock__1TKQf\",\"formWrapper\":\"NewPostBlock_formWrapper__qQFBy\",\"inputWrapper\":\"NewPostBlock_inputWrapper__UDBbc\"};","import React from 'react';\r\nimport css from './NewPostBlock.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength, required } from '../../../Common/Validators/Validators';\r\nimport { Input } from '../../../Common/FormsControl/FormsControl';\r\n\r\nlet maxLength10 = maxLength(10);\r\n\r\nlet PostForm = (props) => {\r\n  console.log(props.touch);\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={css.inputWrapper}>\r\n      <div>\r\n        <Field component={Input} name='postInput' placeholder='your news...' validate={[required, maxLength10]} />\r\n      </div>\r\n    <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet ReduxPostForm = reduxForm({\r\n  form: 'postForm'\r\n})(PostForm);\r\n\r\nconst NewPostBlock = (props) => {\r\n  \r\n  let addPost = (formData) => {\r\n    props.addPost(formData.postInput);\r\n  }\r\n\r\n    return (\r\n        <div className={css.newPostBlock}>\r\n            <p>My posts</p>\r\n            <div className={css.formWrapper}>\r\n              <ReduxPostForm onSubmit={addPost}/>\r\n            </div>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default NewPostBlock;","import React from 'react';\r\nimport css from './Posts.module.css';\r\nimport NewPostBlock from './NewPostBlock/NewPostBlock';\r\nimport postImg from './../../../Materials/postImg.png';\r\n\r\nconst Posts = ((props) => {\r\n    console.log('render');\r\n    return (\r\n        <div>\r\n            <NewPostBlock addPost={props.addPost} />\r\n            \r\n            <div className={css.postsBlock}>\r\n                {props.postMessages.map( item => \r\n                    <div key={item.id} className={css.postBlock}>\r\n                    <div className={css.postBlockImg}>\r\n                        <img src={postImg} alt=\"\"/>\r\n                    </div>\r\n        \r\n                    <div className={css.postText}><p>{item.textPost}</p></div>\r\n                </div> )}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Posts;","// import React from 'react';\r\nimport Posts from './Posts';\r\nimport { addPostAC } from '../../../Redux/Reducers/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postMessages: state.profilePage.postMessages\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (inputText) => { dispatch( addPostAC(inputText) ) }\r\n  }\r\n}\r\n\r\nlet PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport PostsContainer from './Posts/PostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n          <ProfileInfo setMainDataTC={props.setMainDataTC} changeProfilePhotoTC={props.changeProfilePhotoTC} isOwner={props.isOwner}\r\n           profile={props.profile} status={props.status} updateUserStatusTC={props.updateUserStatusTC} />\r\n          <PostsContainer />\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile.js';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileTC, getUserStatusTC, updateUserStatusTC,\r\n         changeProfilePhotoTC, setMainDataTC } from './../../Redux/Reducers/profileReducer.js';\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from './../Common/HOC/withAuthRedirect.js';\r\nimport { compose } from 'redux';\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n\r\n      // useEffect(() => {\r\n      //   debugger\r\n      //   if (!props.isAuth) {\r\n      //     navigate(\"/login\");\r\n      //   }\r\n      // }, [props.isAuth, navigate]);\r\n\r\n      return (\r\n          <Component\r\n              {...props}\r\n              router={{ location, navigate, params }}\r\n          />\r\n      );\r\n  }\r\n  \r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshUsersData(){ \r\n    let userId = this.props.router.params.userId;\r\n    if(!userId){\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getProfileTC(userId);\r\n    this.props.getUserStatusTC(userId);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.refreshUsersData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.router.params.userId !== prevProps.router.params.userId) {\r\n      this.refreshUsersData();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n      return <Profile setMainDataTC={this.props.setMainDataTC} changeProfilePhotoTC={this.props.changeProfilePhotoTC} isOwner={!this.props.router.params.userId} \r\n              profile={this.props.profile} status={this.props.status} updateUserStatusTC={this.props.updateUserStatusTC} /> \r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfileTC, getUserStatusTC, updateUserStatusTC, changeProfilePhotoTC, setMainDataTC }),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n\r\n// let withAuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n// export default connect(mapStateToProps, { getProfileTC })(withRouter(withAuthRedirectComponent));"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","className","css","children","_jsx","autoFocus","onBlur","deactivateEditMode","updateUserStatusTC","onChange","e","target","value","onClick","activateEditMode","Contacts","contactKey","contactData","profile","fullName","concat","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","item","isOwner","reduxForm","form","onSubmit","handleSubmit","Field","name","placeholder","component","Input","type","error","Preloader","_Fragment","src","backgroundImg","alt","photos","large","profileImg","htmlFor","id","files","length","changeProfilePhotoTC","ProfileStatus","ProfileMainInfoReduxForm","initialValues","formData","setMainDataTC","then","catch","ProfileMainInfo","maxLength10","maxLength","ReduxPostForm","console","log","touch","validate","required","addPost","postInput","NewPostBlock","postsBlock","postMessages","postBlock","postBlockImg","postImg","postText","textPost","connect","state","profilePage","dispatch","inputText","addPostAC","Posts","ProfileInfo","PostsContainer","ProfileContainer","React","refreshUsersData","userId","this","router","params","authorizedUserId","getProfileTC","getUserStatusTC","componentDidMount","componentDidUpdate","prevProps","render","Profile","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}